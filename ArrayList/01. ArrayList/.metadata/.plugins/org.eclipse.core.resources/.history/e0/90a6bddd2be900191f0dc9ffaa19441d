package main;

import java.util.Arrays;

public class ArrayList {
	
	private int[] list;
	public static final int CAPACIDADE_DEFAULT = 10;
	private int size;
	
	
	//construtores
	public ArrayList() {
		this(CAPACIDADE_DEFAULT);		
	}
	
	public ArrayList(int capacidade) {
		this.list = new int[capacidade];
		this.size = 0;
	}
	
	public int size() {
		return size;
	}
	
	//checagem
	public boolean isEmpty() {
		return this.size == 0;
	}
	//checagem
	public boolean isFull() {
		return this.size == this.list.length;
	}
	
	private void assegureCapacidade(int capacidadePretendida) {
		if (capacidadePretendida > this.list.length)
				resize(Math.max(this.list.length * 2, capacidadePretendida));
	}

	
	// 1: add pelo valor
	public boolean addValor(int e) {
		assegureCapacidade(this.size + 1);
		this.list[size++] = e;
		return true;
	}

	// 2: add o elemento no index especifico, usando o shift para abrir espa√ßo
	public void addIndexValor(int index, int e) {
		if (index < 0 || index >= this.size)
			throw new IndexOutOfBoundsException();
		
		assegureCapacidade(this.size + 1);
		
		shiftParaDireita(index);
		
		this.list[index] = e;
		this.size += 1;
		
	}
	
	// 3: add o elemento no index especifico, setando/alterando o valor
	public void addSet(int index, int e) {
		if (index < 0 || index >= this.size)
			throw new IndexOutOfBoundsException();
		this.list[index] = e;
	}
	
	
	public int indexOf(int value) {
		
		for (int i = 0; i < size; i++)
			if (this.list[i] == value) 
				return i;
		return -1;		
	}
	
	public int get(int index) {
		if (index >= size || index <0) {
			throw new ArrayIndexOutOfBoundsException();
		} else {
			return this.list[index];
		}
	}
	
	private void resize() {
		int[] newList = new int[this.list.length * 2];
		for (int i = 0; i < size; i++) {
			newList[i] = this.list[i];
		}
		this.list = newList;
	}
	
	public String toString() {
		return Arrays.toString(this.list);
	}
	
}
